{"version":3,"sources":["../src/ajax_ctrl.js"],"names":["MetricsPanelCtrl","$","_","kbn","TimeSeries","moment","panelDefaults","method","url","errorMode","params_js","AjaxCtrl","$scope","$injector","templateSrv","$sce","$http","defaults","panel","timeSettings","events","on","onInitEditMode","bind","onPanelInitalized","onRefresh","onRender","datasource","updateTimeRange","updateFN","editorTabs","splice","addEditorTab","pluginId","editorTabIndex","params_fn","display_fn","self_params","params","replace","scopedVars","Function","ex","console","warn","self","width","resolution","height","src","encodeURI","param","html","updateContent","then","successCallback","response","data","errorCallback","body","JSON","stringify","headers","content","trustAsHtml","e","log","templateUrl"],"mappings":"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","file":"ajax_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport $ from 'jquery'\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport moment from 'moment';\nimport './css/ajax-panel.css!';\n\nconst panelDefaults = {\n  method: 'GET',\n  url: 'https://raw.githubusercontent.com/ryantxu/ajax-panel/master/static/example.txt',\n  errorMode: 'show',\n  params_js: \"{\\n\" +\n             \" from:ctrl.range.from.format('x'),  // x is unix ms timestamp\\n\" +\n             \" to:ctrl.range.to.format('x'), \\n\" +\n             \" height:ctrl.height\\n\" +\n             \"}\"\n};\n\nexport class AjaxCtrl extends MetricsPanelCtrl {\n  // constructor($scope, $injector, private templateSrv, private $sce) {\n  constructor($scope, $injector, templateSrv, $sce, $http) {\n\n    super($scope, $injector);\n    this.$sce = $sce;\n    this.$http = $http;\n    this.templateSrv = templateSrv;\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.timeSettings, panelDefaults.timeSettings);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n  }\n\n  // This just skips trying to send the actual query.  perhaps there is a better way\n  issueQueries(datasource) {\n    this.updateTimeRange();\n\n    //console.log('block issueQueries', datasource);\n  }\n\n  onPanelInitalized() {\n    this.updateFN();\n  }\n\n  onInitEditMode() {\n    this.editorTabs.splice(1,1); // remove the 'Metrics Tab'\n    this.addEditorTab('Options', 'public/plugins/' + this.pluginId + '/editor.html',1);\n    this.editorTabIndex = 1;\n\n    this.updateFN();\n  }\n\n  onPanelTeardown() {\n   // this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateFN() {\n    this.params_fn = null;\n    this.display_fn = null;\n\n    if(this.panel.params_js) {\n      try {\n        var self_params = this.panel.params_js;\n        var params = this.templateSrv.replace(self_params,this.panel.scopedVars);\n        // this.panel.params_js = params;\n        this.params_fn = new Function('ctrl', 'return ' + params);\n      }\n      catch( ex ) {\n        console.warn('error parsing params_js', this.panel.params_js, ex );\n        this.params_fn = null;\n      }\n    }\n\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    //console.log('refresh', this);\n    this.updateTimeRange();  // needed for the first call\n\n    var self = this;\n    var url = this.templateSrv.replace(self.panel.url, this.panel.scopedVars); \n    var params;\n    if(this.params_fn) {\n      params = this.params_fn( this );\n    }\n    //console.log( \"onRender\", this, params );\n\n    if(self.panel.method === 'iframe') {   \n      var width = self.resolution - 50;   \n      var height = self.height - 10;   \n      var src = encodeURI(url + '&' + $.param(params));   \n      var html = `<iframe width='${width}' height='${height}' frameborder='0' src=${src}><\\/iframe>`;   \n      self.updateContent(html);   \n    }   \n    else if(self.panel.method === 'GET') {   \n      this.$http({\n        method: this.panel.method,\n        url: url,\n        params: params\n      }).then(function successCallback(response) {\n        //console.log('success', response, self);\n        var html = response.data;\n        if(self.display_fn) {\n          html = self.display_fn(self, response);\n        }\n        self.updateContent( html );\n      }, function errorCallback(response) {\n        console.warn('error', response);\n        var body = '<h1>Error</h1><pre>' + JSON.stringify(response, null, \" \") + \"</pre>\";\n        self.updateContent(body);\n      });\n    }\n    else if(self.panel.method === 'POST') {   \n      this.$http({\n        method: this.panel.method,\n        url: url,\n        data: params,\n        headers:{\n          'Content-Type':'application/json'\n        }\n      }).then(function successCallback(response) {\n        //console.log('success', response, self);\n        var html = response.data;\n        if(self.display_fn) {\n          html = self.display_fn(self, response);\n        }\n        self.updateContent( html );\n      }, function errorCallback(response) {\n        console.warn('error', response);\n        var body = '<h1>Error</h1><pre>' + JSON.stringify(response, null, \" \") + \"</pre>\";\n        self.updateContent(body);\n      });\n    }\n  }\n\n  updateContent(html) {\n    try {\n      this.content = this.$sce.trustAsHtml(this.templateSrv.replace(html, this.panel.scopedVars));\n    } catch (e) {\n      console.log('Text panel error: ', e);\n      this.content = this.$sce.trustAsHtml(html);\n    }\n  }\n\n  onRender() {\n    //console.log('render', this);\n  }\n}\n\nAjaxCtrl.templateUrl = 'module.html';\n"]}